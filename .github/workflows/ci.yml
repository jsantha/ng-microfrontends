name: CI

env:
  MAIN_BRANCH: main

on:
  push:
    branches:
      - main
  pull_request:

# https://github.com/nrwl/nx-set-shas
jobs:
  main:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}

    steps:
      - uses: actions/checkout@v2
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: ${{ env.MAIN_BRANCH }}
          error-on-no-successful-workflow: true

      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: npm ci
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      - run: npx nx affected --target=lint --parallel --max-parallel=3
      - run: npx nx affected --target=build --parallel --max-parallel=3
      - run: npx nx affected --target=test --parallel --max-parallel=2
      - id: set-affected-apps
        run: echo "::set-output name=affected-apps::$(node affected-apps)"
    outputs:
      affected-apps: ${{ steps.set-affected-apps.outputs.affected-apps }}

  pr:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: ${{ env.MAIN_BRANCH }}
          error-on-no-successful-workflow: true

      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: npm ci
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      - run: npx nx affected --target=lint --parallel --max-parallel=3
      - run: npx nx affected --target=build --parallel --max-parallel=3
      - run: npx nx affected --target=test --parallel --max-parallel=2

  deploy:
    runs-on: ubuntu-latest
    needs:
      - main
    if: ${{ needs.main.outputs.affected-apps != '[]' }}
    strategy:
      matrix:
        apps: ${{ fromJson(needs.main.outputs.affected-apps) }}
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.3.0
        with:
          owner: jsantha
          repo: ng-microfrontends
          github_token: ${{ secrets.ACCESS_TOKEN_GITHUB }}
          workflow_file_name: 'app-${{ matrix.apps }}-cd.yml'
          ref: ${{ env.GITHUB_SHA }}
